include console.inc
;*****************************************************************************
; Демонстрация трех форм  (КАНОНИЧЕСКИХ) записи адресов операндов (вида m)
; (Эта программа является приложением к pdf-документу МОДИФИКАЦИЯ АДРЕСОВ)
;*****************************************************************************
; ИСПОЛЬЗУЕМЫЕ ОБОЗНАЧЕНИЯ: 
;-----------------------------------------------------------------------------
; Е - любое выражение (адресное или константное), задающее постоянную 
;                                                 составляющую адреса
; А - адресное выражение, К - константное выражение
; B - базовый регистр-модификатор (любой 32-битный регистр общего назначения)
; I - индексный регистр-модификатор (любой 32-битный регистр общего назначения,
;                                    кроме ESP)
; Scale - масштабный множитель: 1(можно опустить), 2, 4 или 8 
; <B> (или <I>) - текущее (на этапе выполнения команды) содержимое регистра B (или I)
;-----------------------------------------------------------------------------
; а32 - 32-битное адресное поле под постоянную составляющую адреса (смещение).
; Значение в этом поле относится к так называемым перемещаемым адресам (в листинге
; трансляции команды с такими полями помечаются значком R - Relocatable).
; Значение в этом поле меняется на разных этапах разработки программы:
; 1) после этапа трансляции исходного модуля с расширением .asm в объектный модуль
; с расширением .obj в поле а32 - смещение от начала секции данных этого модуля.
; 2) после этапа компоновки, т.е. объединения нескольких объектных модулей
; (для многомодульной программы) с расширением .obj  в единый загрузочный модуль 
; с расширением .exe  значение в поле а32 пересчитывается относительно начала  
; объединённой секции данных (т.к. секции данных разных модулей склеиваются между собой)
; 3) после загрузки исполняемого файла (с расширением .ехе) в память компьютера
; (когда для каждой секции определяется адрес её начала в линейной памяти) будет 
; произведена настройка программы по конкретному месту: в полях а32 появятся новые 
; значения - смещения от начала (нулевого адреса) линейного 4-Гигабайтного адресного 
; пространства. Программа запуститися на счёт (при получившихся значениях в полях а32)
; (см внимательно листинг трансляции - с расширением .lst)
;------------------------------------------------------------------------------
; i8 - непосредственное значение с/зн в 8-битовом формате (записывается в байтовое
; поле в качестве постоянной составляющей адреса), не меняется на разных этапах 
; разработки программы (см листинг трансляции с расширением .lst)
;-------------------------------------------------------------------------------
; i32 - непосредственное значение с/зн в 32-битовом формате (записывается в 4-х 
; байтовое поле в качестве постоянной составляющей адреса), не меняется на разных
; этапах разработки программы (см листинг трансляции с расширением .lst)
;--------------------------------------------------------------------------------

.data
X   db 0,11,22,33,44    ; X[0..4]
Y	db 55,66,77,88,99   ; Y[0..4]
Z	db 500 dup(0)       ; Z[0..499]
V	db 123

.code
start:
;*****************************************************************************
; Первая форма (ПРЯМАЯ АДРЕСАЦИЯ, нет модификаторов):
;*****************************************************************************
; Запись адреса операнда:
; A
; Правило вычисления А_исп:
; А_исп = А (т.е.исполнительный адрес совпадает с адресом, заданным в команде)
;*****************************************************************************
	mov AL,X+1          ; AL := 11 (здесь А=Х+1 в формате а32)
	
;*****************************************************************************	
; Вторая форма (ОДИН МОДИФИКАТОР - т.н. БАЗОВЫЙ РЕГИСТР):
;*****************************************************************************
; Каноническая форма записи адреса операнда:
; E[B]   (если К=0, то можно записывать короче: [B])
; Правило вычисления А_исп:
; А_исп = (E + <B>) mod 2^32
;*****************************************************************************
	mov EBX,offset X
	mov AL,[EBX]        ; AL := 0   (здесь под К=0 поле не отводится, B=EBX)
	
	mov ECX,offset X
	mov AL,4[ECX]       ; AL := 44  (здесь К=4 в формате i8, B=ECX)
	
	mov EDX,offset X
	mov AL,1+3[EDX]     ; AL := 44  (здесь К=1+3 в формате i8, B=EDX)
	
	mov EAX,offset Y
	mov AL,(1-3)[EAX]   ; AL := 33  (здесь К=1-3 в формате i8, B=EAX)
	
	mov ESI,4 
	mov AL,X+1[ESI]     ; AL := 55  (здесь А=X+1 в формате а32, B=ESI)
	
	mov EDI,0
	mov AL,(Y-3)[EDI]   ; AL := 22  (здесь А=Y-3 в формате а32, B=EDI)
	
	mov EBX,offset Z
	mov AL,500[EBX]     ; AL := 123	(здесь К=500 в формате i32, B=EBX)
	
	mov EBX,offset V
	mov AL,(-500)[EBX]  ; AL := 0 (=Z[0]) (здесь К=-500 в формате i32, B=EBX)
	
;*****************************************************************************	
; Третья форма (ДВА МОДИФИКАТОРA - т.н. БАЗОВЫЙ и ИНДЕКСНЫЙ РЕГИСТРЫ):
;*****************************************************************************
; Каноническая форма записи адреса операнда:
; E[B][Scale*I]   (если К=0, то можно записывать короче: [B][Scale*I])
; Правило вычисления А_исп:
; А_исп = (E + <B> + Scale*<I>) mod 2^32
; Замечание 1: если I (индексный регистр) опущен, то приходим ко второй форме:
;              E[B]  
; Замечание 2: если B (базовый регистр) опущен, то имеем особый подслучай
;                                               записи адреса в третьей форме:
;              E[Scale*I] 
; Замечание 3. Добавление второго модификатора (I) приводит к тому, что, при 
; прочих равных условиях, машинная команда получится на 1 байт длиннее 
;                                            (байт SIB - см.пособие В.Г.Баулы)
;*****************************************************************************
	
	mov EBX,offset X
	mov ECX,1
	mov AL,[EBX][2*ECX]     ; AL := 22  
                            ; здесь под К=0 поле не отводится, B=EBX, I=ECX, Scale=2
	
	mov EBX,offset X
	mov EDX,1
	mov AL,3[EBX][4*EDX]    ; AL := 77  
                            ; здесь К=3 в формате i8, B=EBX, I=EDX, Scale=4
	
	mov EBX,offset X
	mov EDX,2
	mov AL,1+2[EBX][EDX]    ; AL := 55  
	                        ; здесь К=1+2 в формате i8, B=EBX, I=EDX, Scale=1
                            ; (возможно, ассемблер решит, что B=EDX, I=EBX)
 	mov EBX,offset Y
	mov ESI,3
	mov AL,(1-3)[EBX][2*ESI]; AL := 99  
	                        ; здесь К=1-3 в формате i8, B=EBX, I=ESI, Scale=2
	
	mov EBX,1
	mov AL,(Y-5)[EBX][8*EBX]; AL := 99  
	                        ; здесь A=Y-5 в формате a32, B=EBX, I=EBX, Scale=8
	
	mov EBX,0
	mov EAX,3
	mov AL,X+2[EBX][2*EAX]  ; AL := 88  
	                        ; здесь A=X+2 в формате a32, B=EBX, I=EAX, Scale=2
	
	mov EDX,offset Z
	mov ECX,0
	mov AL,500[EDX+8*ECX]   ; AL := 123 
	                        ; здесь K=500 в формате i32, B=EDX, I=ECX, Scale=8
	
	mov EBX,offset V
	mov ECX,0
	mov AL,(-500)[EBX+ECX]  ; AL := 0 (=Z[0]) 
	                        ; здесь K=-500 в формате i32, B=EBX, I=ECX, Scale=1

	mov ESI,3
	mov AL,X[2*ESI]         ; AL := 66  
	                        ; здесь A=X в формате a32, B - нет, I=ESI, Scale=2
                            ; это особый подслучай для третьей формы 
                            ; (т.к. базовый регистр опущен)  
                            
    	
;-----------------------------------------------------------------------------------                             
; Замечание. Значение К может быть разной величины (равняться нулю, укладываться в 
; формат знакового байта или же только в формат знакового двойного слова). Принцип: чем
; меньше, тем лучше. Идеально - 0 (т.к. в этом случае под кодирование нулевой постоянной 
; составляющей адреса в команде не выделяется специального поля), в этом случае команда 
; получится компактной. 

; Исключение 1 (к замечанию). Если в качестве базового регистра-модификатора (B) 
; используется EBP, то при К=0 в машинную команду принудительно вставляется нулевая 
; постоянная составляющая адреса в формате байта, например (см. листинг трансляции).
    ; третья форма:
    mov EBP,offset Z
    mov ESI,250
    mov AL,[EBP][2*ESI]     ; AL := 123 (здесь K=0 в формате i8, B=EBP, I=ESI, Scale=2)
    ; вторая форма:
    mov AL,[EBP]            ; AL := 0 (здесь K=0 в формате i8, B=EBP)
    
; Исключение 2 (к замечанию). Если имеет место особый подслучай E[Scale*I], то при К=0
; принудительно вставляется нулевая постоянная составляющая адреса в 32-битовом формате:
    mov ESI,100
    mov AL,[8*ESI]          ; (здесь K=0 в формате i32, B отсутствует, I=ESI, Scale=8)       
                            ; выполнение этой команды приведёт к аварийному останову 
                            ; работы программы (нарушение общей защиты памяти), т.к.
                            ; доступ к первым 64 Кб памяти - закрыт в protected mode
		   

;-----------------------------------------------------------------------------------    
; ВНИМАНИЕ! ИЗУЧИТЕ ЛИСТИНГ ТРАНСЛЯЦИИ с расширением .lst (начало листинга) на предмет 
; того, какие размеры получаются у машинных эквивалентов команд, использующих операнды 
; вида m. Найдите в этих командах поля a32, i8  и i32 (а также найдите команды, в 
; которых отсутствуют поля для постоянной составляющей адреса из-за К=0)
;------------------------------------------------------------------------------------

comment &

Внимание! Ассемблеру не нравится знак МИНУС вне скобок (круглых или квадратных) 
при записи адресов операндов. Поэтому в программе выражения (адресные или константные), 
использующие МИНУС, были заключены в круглые скобки (можно их заключить и в квадратные
скобки, смысл и синтаксис при этом не нарушится).

В программе адреса задавались только в канонических формах. Можете поэкспериментировать
(в меру своей фантазии) с этой программой с целью выявления альтернативных способов 
записи этих же адресов (см примеры альтернативных записей, например, в пособии В.Г.Баулы).

&	

	exit
	end start